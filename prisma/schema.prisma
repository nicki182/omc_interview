// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
  binaryTargets = ["native", "debian-openssl-1.1.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Temperature {
  id        Int      @id @default(autoincrement())
  timestamp BigInt    
  sensor_id Int
  sensor    Sensor @relation(fields: [sensor_id], references: [id])   
  temperature_value Float
  @@map("temperatures")
}

model Malfunction {
  id        Int      @id @default(autoincrement())
  timestamp BigInt      
  sensor_id Int
  average_temperature_value Float
  deviation Float
  sensor    Sensor @relation(fields: [sensor_id], references: [id])   
  @@map("malfunctions")
}
model Sensor {
  id        Int          @id @default(autoincrement())
  face      Face         @default(SOUTH)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  temperatures Temperature[]
  malfunctions Malfunction[]
  @@map("sensors")
}

model AggregatedTemperature {
  id        Int      @id @default(autoincrement())
  face      Face
  timestamp BigInt 
  average_temperature_value Float
  time      Time   @default(HOUR)        
  @@map("aggregated_temperatures")
}

enum Time {
  HOUR
  DAY
  WEEK
  MONTH
  YEAR
}

enum Face {
  SOUTH
  EAST
  NORTH
  WEST
}
